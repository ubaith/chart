{"mappings":"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","sources":["node_modules/@kurkle/color/dist/color.esm.js","node_modules/chart.js/src/helpers/helpers.core.ts","node_modules/chart.js/src/helpers/helpers.math.ts","node_modules/chart.js/src/helpers/helpers.collection.ts","node_modules/chart.js/src/helpers/helpers.extras.ts","node_modules/chart.js/src/helpers/helpers.easing.ts","node_modules/chart.js/src/helpers/helpers.color.ts","node_modules/chart.js/src/core/core.animations.defaults.js","node_modules/chart.js/src/helpers/helpers.intl.ts","node_modules/chart.js/src/core/core.ticks.js","node_modules/chart.js/src/core/core.defaults.js","node_modules/chart.js/src/core/core.layouts.defaults.js","node_modules/chart.js/src/core/core.scale.defaults.js","node_modules/chart.js/src/helpers/helpers.canvas.js","node_modules/chart.js/src/helpers/helpers.options.ts","node_modules/chart.js/src/helpers/helpers.config.js","node_modules/chart.js/src/helpers/helpers.curve.ts","node_modules/chart.js/src/helpers/helpers.dom.ts","node_modules/chart.js/src/helpers/helpers.interpolation.ts","node_modules/chart.js/src/helpers/helpers.rtl.ts","node_modules/chart.js/src/helpers/helpers.segment.js","node_modules/chart.js/src/core/core.animator.js","node_modules/chart.js/src/core/core.animation.js","node_modules/chart.js/src/core/core.animations.js","node_modules/chart.js/src/core/core.datasetController.js","node_modules/chart.js/src/controllers/controller.bar.js","node_modules/chart.js/src/controllers/controller.doughnut.js","node_modules/chart.js/src/controllers/controller.polarArea.js","node_modules/chart.js/src/controllers/controller.bubble.js","node_modules/chart.js/src/controllers/controller.line.js","node_modules/chart.js/src/controllers/controller.pie.js","node_modules/chart.js/src/controllers/controller.radar.js","node_modules/chart.js/src/controllers/controller.scatter.js","node_modules/chart.js/src/core/core.adapters.ts","node_modules/chart.js/src/core/core.interaction.js","node_modules/chart.js/src/core/core.layouts.js","node_modules/chart.js/src/platform/platform.base.js","node_modules/chart.js/src/platform/platform.basic.js","node_modules/chart.js/src/platform/platform.dom.js","node_modules/chart.js/src/core/core.element.ts","node_modules/chart.js/src/core/core.scale.autoskip.js","node_modules/chart.js/src/core/core.scale.js","node_modules/chart.js/src/core/core.typedRegistry.js","node_modules/chart.js/src/core/core.registry.js","node_modules/chart.js/src/core/core.plugins.js","node_modules/chart.js/src/core/core.config.js","node_modules/chart.js/src/core/core.controller.js","node_modules/chart.js/src/platform/index.js","node_modules/chart.js/src/elements/element.arc.ts","node_modules/chart.js/src/elements/element.line.js","node_modules/chart.js/src/elements/element.point.ts","node_modules/chart.js/src/elements/element.bar.js","node_modules/chart.js/src/plugins/plugin.colors.ts","node_modules/chart.js/src/plugins/plugin.decimation.js","node_modules/chart.js/src/plugins/plugin.filler/filler.segment.js","node_modules/chart.js/src/plugins/plugin.filler/filler.helper.js","node_modules/chart.js/src/plugins/plugin.filler/filler.options.js","node_modules/chart.js/src/plugins/plugin.filler/filler.target.stack.js","node_modules/chart.js/src/plugins/plugin.filler/simpleArc.js","node_modules/chart.js/src/plugins/plugin.filler/filler.target.js","node_modules/chart.js/src/plugins/plugin.filler/filler.drawing.js","node_modules/chart.js/src/plugins/plugin.filler/index.js","node_modules/chart.js/src/plugins/plugin.legend.js","node_modules/chart.js/src/plugins/plugin.title.js","node_modules/chart.js/src/plugins/plugin.subtitle.js","node_modules/chart.js/src/plugins/plugin.tooltip.js","node_modules/chart.js/src/scales/scale.category.js","node_modules/chart.js/src/scales/scale.linearbase.js","node_modules/chart.js/src/scales/scale.linear.js","node_modules/chart.js/src/scales/scale.logarithmic.js","node_modules/chart.js/src/scales/scale.radialLinear.js","node_modules/chart.js/src/scales/scale.time.js","node_modules/chart.js/src/scales/scale.timeseries.js","node_modules/chart.js/auto/auto.js","node_modules/chart.js/src/index.ts","src/acquisitions.js"],"sourcesContent":["/*!\n * @kurkle/color v0.3.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): AnyObject {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>();\n  let i: number, ilen: number;\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n\n  if (set.size === ilen) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0); // toFixed has a max of 20 decimal places\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `canvas` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } canvas.Chart\n * @typedef { import('../../types/index.js').Point } Point\n */\n\n/**\n * @namespace Chart.helpers.canvas\n */\n\n/**\n * Converts the given font object into a CSS font string.\n * @param {object} font - A font object.\n * @return {string|null} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\n/**\n * @private\n */\nexport function _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param {canvas.Chart} chart - The chart instance.\n * @param {number} pixel - A pixel value.\n * @param {number} width - The width of the element.\n * @returns {number} The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n * @param {HTMLCanvasElement} canvas\n * @param {CanvasRenderingContext2D} [ctx]\n */\nexport function clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport function drawPoint(ctx, options, x, y) {\n  drawPointLegend(ctx, options, x, y, null);\n}\n\nexport function drawPointLegend(ctx, options, x, y, w) {\n  let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n  default:\n    if (w) {\n      ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n    } else {\n      ctx.arc(x, y, radius, 0, TAU);\n    }\n    ctx.closePath();\n    break;\n  case 'triangle':\n    width = w ? w / 2 : radius;\n    ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n    ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      width = w ? w / 2 : size;\n      ctx.rect(x - width, y - size, 2 * width, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'rectRot':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'cross':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    break;\n  case 'star':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    rad += QUARTER_PI;\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    break;\n  case 'line':\n    xOffset = w ? w / 2 : Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n    break;\n  case false:\n    ctx.closePath();\n    break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param {Point} point - The point to test\n * @param {object} area - The rectangle\n * @param {number} [margin] - allowed margin\n * @returns {boolean}\n * @private\n */\nexport function _isPointInArea(point, area, margin) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += font.lineHeight;\n  }\n\n  ctx.restore();\n}\n\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx, opts) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nexport function addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {Point, toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec} from '../../types/index.js';\nimport type {TRBL, TRBLCorners} from '../../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\nexport interface CanvasFontSpec extends FontSpec {\n  string: string;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","import {defined, isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param {object[]} scopes - The option scopes to look for values, in resolution order\n * @param {string[]} [prefixes] - The prefixes for values, in resolution order.\n * @param {object[]} [rootScopes] - The root option scopes\n * @param {string|boolean} [fallback] - Parent scopes fallback\n * @param {function} [getTarget] - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  });\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param {object} proxy - The Proxy returned by `_createResolver`\n * @param {object} context - Context object for scriptable/indexable options\n * @param {object} [subProxy] - The proxy provided for scriptable options\n * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults] - Defaults for descriptors\n * @private\n */\nexport function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  });\n}\n\n/**\n * @private\n */\nexport function _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    // @ts-ignore\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\n\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(meta, data, start, count) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array(count);\n  let i, ilen, index, item;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../../types/index.js';\n\nexport interface SplinePoint {\n  x: number;\n  y: number;\n  skip?: boolean;\n\n  // Both Bezier and monotone interpolations have these fields\n  // but they are added in different spots\n  cp1x?: number;\n  cp1y?: number;\n  cp2x?: number;\n  cp2y?: number;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import type {ChartArea, Scale} from '../../types/index.js';\nimport type Chart from '../core/core.controller.js';\nimport type {ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {Point} from '../../types/geometric.js';\nimport type {SplinePoint} from './helpers.curve.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n","import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (an thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal meta data accordingly.\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing',\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../../types/basic.js';\nimport type {ChartOptions} from '../../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import type {AnyObject} from '../../types/basic.js';\nimport type {Point} from '../../types/geometric.js';\nimport type {Animation} from '../../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n\n  id = scaleOptions.axis\n    || axisFromPosition(scaleOptions.position)\n    || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n\n  if (id) {\n    return id;\n  }\n\n  throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getDatasetArea(meta) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: xScale.left,\n      right: xScale.right,\n      top: yScale.top,\n      bottom: yScale.bottom\n    };\n  }\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta) || this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import {DoughnutController, PolarAreaController} from '../index.js';\nimport type {Chart, ChartDataset} from '../types.js';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n  forceOverride?: boolean;\n}\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n\n  return i;\n}\n\nfunction getColorizer(chart: Chart) {\n  let i = 0;\n\n  return (dataset: ChartDataset, datasetIndex: number) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  } as ColorsPluginOptions,\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      options: {elements},\n      data: {datasets}\n    } = chart.config;\n\n    if (!options.forceOverride && (containsColorsDefinitions(datasets) || elements && containsColorsDefinitions(elements))) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n\n    datasets.forEach(colorizer);\n  }\n};\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n\n    items.push({\n      // Text position\n      x: pointLabelPosition.x,\n      y,\n\n      // Text rendering data\n      textAlign,\n\n      // Bounding box\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if its not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @private\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guestimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n","export * from './controllers/index.js';\nexport * from './core/index.js';\nexport * from './elements/index.js';\nexport * from './platform/index.js';\nexport * from './plugins/index.js';\nexport * from './scales/index.js';\n\nimport * as controllers from './controllers/index.js';\nimport * as elements from './elements/index.js';\nimport * as plugins from './plugins/index.js';\nimport * as scales from './scales/index.js';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n","import Chart from 'chart.js/auto'\n\n(async function() {\n  const data = [\n    { year: 2010, count: 10 },\n    { year: 2011, count: 20 },\n    { year: 2012, count: 15 },\n    { year: 2013, count: 25 },\n    { year: 2014, count: 22 },\n    { year: 2015, count: 30 },\n    { year: 2016, count: 28 },\n  ];\n\n  new Chart(\n    document.getElementById('acquisitions'),\n    {\n      type: 'bar',\n      data: {\n        labels: data.map(row => row.year),\n        datasets: [\n          {\n            label: 'Acquisitions by year',\n            data: data.map(row => row.count)\n          }\n        ]\n      }\n    }\n  );\n})();\n"],"names":["$87e6acd7396d97dc$export$2077e0241d6afd3c","v","$87e6acd7396d97dc$export$837ba5c449269406","l","h","Math","max","min","$87e6acd7396d97dc$export$bcc6e673dfa14d36","$87e6acd7396d97dc$export$ed9bd8dcaeba14f6","$87e6acd7396d97dc$export$dbf961a8d278dbef","$87e6acd7396d97dc$export$aa35ef1f24408ab9","$87e6acd7396d97dc$var$map$1","A","B","C","D","E","F","a","b","c","d","e","f","$87e6acd7396d97dc$var$hex","$87e6acd7396d97dc$var$h1","$87e6acd7396d97dc$var$h2","$87e6acd7396d97dc$var$eq","$87e6acd7396d97dc$export$1b06654353ef9f67","r","g","$87e6acd7396d97dc$var$isShort","$87e6acd7396d97dc$var$alpha","undefined","$87e6acd7396d97dc$var$HUE_RE","$87e6acd7396d97dc$var$hsl2rgbn","s","n","k","$87e6acd7396d97dc$var$hsv2rgbn","$87e6acd7396d97dc$var$hwb2rgbn","w","rgb","i","$87e6acd7396d97dc$export$b5ba70b240f8f7f","$87e6acd7396d97dc$var$hueValue","$87e6acd7396d97dc$var$calln","Array","isArray","map","$87e6acd7396d97dc$export$4c15bd42559b811d","$87e6acd7396d97dc$var$hue","$87e6acd7396d97dc$export$5e91288c399be4f9","str","m","exec","p1","p2","$87e6acd7396d97dc$export$e2710022c70fc9ee","$87e6acd7396d97dc$export$b785a357c84e4a04","$87e6acd7396d97dc$var$map","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","$87e6acd7396d97dc$var$names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","$87e6acd7396d97dc$var$names","$87e6acd7396d97dc$export$b2f06b640faad956","unpacked","keys","Object","tkeys","j","ok","nk","length","replace","parseInt","$87e6acd7396d97dc$var$unpack","transparent","toLowerCase","$87e6acd7396d97dc$var$RGB_RE","$87e6acd7396d97dc$var$to","pow","$87e6acd7396d97dc$var$from","$87e6acd7396d97dc$var$modHSL","ratio","tmp","$87e6acd7396d97dc$var$clone","proto","assign","$87e6acd7396d97dc$var$fromObject","input","$87e6acd7396d97dc$var$functionParse","charAt","$87e6acd7396d97dc$export$91aedb20f296e541","$87e6acd7396d97dc$export$892596cec99bc70e","constructor","type","ret","len","this","_rgb","_valid","valid","obj","rgbString","hexString","hslString","$87e6acd7396d97dc$export$a197af1c58e6260c","mix","color","weight","c1","c2","w2","p","w1","interpolate","t","rgb1","rgb2","$87e6acd7396d97dc$var$interpolate","clone","alpha","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","$87e6acd7396d97dc$export$bb628a54ab399bc9","noop","uid","id","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","resolveObjectKey","resolver","parts","split","part","push","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","_isClickEvent","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","round","niceRange","floor","fraction","_factorize","result","sqrt","sort","pop","isNumber","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","isFiniteNumber","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","add","from","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","Color","getHoverColor","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","getNumberFormat","format","formatters","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","$8d27ca75da600b9c$export$91477dc880baac21","overrides","descriptors","getScope","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","$8d27ca75da600b9c$export$4368d992c4eafac0","_scriptable","startsWith","_indexable","_fallback","defaults","duration","easing","loop","to","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","bottom","display","offset","beginAtZero","bounds","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","Ticks","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","opts","lines","strokeWidth","strokeColor","line","translation","fillStyle","textAlign","textBaseline","setRenderOpts","backdrop","drawBackdrop","strokeStyle","strokeText","maxWidth","fillText","decorateText","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","oldColor","fillRect","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","_addGrace","minmax","change","keepZero","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","Error","join","delete","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","pos","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","_computeSegments","segmentOptions","_loop","findStartAndEnd","splitByStyles","cur","stop","solidSegments","_fullLoop","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","listen","cb","reduce","acc","_duration","cancel","remove","$216d2bdc6f281bf6$export$a424a0aa8f687495","interpolators","boolean","factor","c0","helpersColor","number","Animation","cfg","currentValue","_fn","_easing","_start","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","animator","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","DoughnutController","animateRotate","animateScale","cutout","circumference","spacing","legend","generateLabels","fontColor","getDataVisibility","legendItem","toggleDataVisibility","super","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","categoryPercentage","barPercentage","grouped","_index_","_value_","iAxisKey","vAxisKey","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","skipNull","_getStackCount","_getStackIndex","name1","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","pointPosition","getPointPositionForValue","registry","getElement","abstract","DateAdapterBase","members","init","formats","diff","startOf","endOf","$216d2bdc6f281bf6$export$f32766ea09ec8bc4","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","$216d2bdc6f281bf6$export$a13296960cae0384","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","$216d2bdc6f281bf6$export$1ecca0613f5e56d2","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","getEvenSpacing","factors","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","$216d2bdc6f281bf6$export$4bb7493d241fd8a5","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","callCallback","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","initOptions","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","Interaction","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","lastEvent","determineLastEvent","parseBorderRadius","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","_interpolate","_getInterpolationMethod","interpolated","hitRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","hoverRadius","mouseX","mouseY","inXRange","inYRange","addRectPath","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","getColorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","containsColorsDefinitions","$216d2bdc6f281bf6$export$c537fa0d021d010b","forceOverride","_args","colorizer","cleanDecimatedDataset","cleanDecimatedData","$216d2bdc6f281bf6$export$be17f937e9aa7533","algorithm","beforeElementsUpdate","xAxis","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","$216d2bdc6f281bf6$export$d19ba4d812bed757","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","$216d2bdc6f281bf6$export$ed247974535929c7","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","$216d2bdc6f281bf6$export$f99233281efd08a0","titleBlock","createTitle","WeakMap","$216d2bdc6f281bf6$export$d5c56664638992a4","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","$216d2bdc6f281bf6$export$28c660c63b792dea","afterInit","afterDraw","findOrAddLabel","addedLabels","addIfString","lastIndexOf","_getLabelForValue","generateTicks","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","_startValue","_endValue","_valueRange","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","minExp","exp","startExp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","hLimits","vLimits","pathRadiusLine","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","gridLineOpts","drawRadiusLine","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","adapters","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","$216d2bdc6f281bf6$export$acaa6426d77a227e","_addedLabels","added","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","$e24bb3f4f01060dd$export$2e2bcd8739ae039"],"version":3,"file":"index.fb35cb14.js.map"}